// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    // register
    Register(in=wirereset, load=true, out=wirereg, out=out);
    Inc16(in=wirereg, out=wireincrement);

    // enable inc
    Mux16(a=in, b=wireincrement, sel=inc, out=wireinc);

    // enable load
    Mux16(a=wireinc, b=in, sel=load, out=wireload);

    // enable reset
    Mux16(a=wireload, b=false, sel=reset, out=wirereset);

    // Optimized using 1 chip
    // Mux8Way16(a=wirereg, b=wireincrement, c=in, d=in, e=false, f=false, g=false, h=false, sel[0]=inc, sel[1]=load, sel[2]=reset, out=wirereset);
}
